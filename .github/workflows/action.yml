name: "Plugin Check and Release"

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      wp_version:
        description: 'WordPress version to test against'
        required: true
        default: '6.6.2'
      plugin_version:
        description: 'Plugin version to release'
        required: true
        default: '1.0.0'

env:
  PLUGIN_SLUG: 'wpoven-plugin-switcher'
  WP_PATH: /var/www/html
  PLUGIN_PATH: /var/www/html/wp-content/plugins/wpoven_pluginswitcher
  WORDPRESS_URL: http://localhost
  ADMIN_USER: admin
  ADMIN_PASSWORD: Wpoven@baseapp1
  ADMIN_EMAIL: admin@example.com

jobs:
  plugin-check:
    name: WordPress Plugin Check
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.plugin-check.outputs.status }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, xml, mysql
          coverage: none

      - name: Verify PHP installation
        run: php -v

      - name: Start MySQL
        run: |
          sudo systemctl start mysql
          mysql -e "CREATE DATABASE IF NOT EXISTS wordpress_test;" -uroot -proot

      - name: Setup WordPress
        run: |
          # Download and extract WordPress
          wget https://wordpress.org/latest.tar.gz
          sudo tar -xzf latest.tar.gz -C /var/www/html --strip-components=1
          
          # Configure wp-config.php
          sudo cp $WP_PATH/wp-config-sample.php $WP_PATH/wp-config.php
          sudo sed -i 's/database_name_here/wordpress_test/' $WP_PATH/wp-config.php
          sudo sed -i 's/username_here/root/' $WP_PATH/wp-config.php
          sudo sed -i 's/password_here/root/' $WP_PATH/wp-config.php
          
          # Set permissions
          sudo chown -R www-data:www-data $WP_PATH
          sudo chmod -R 755 $WP_PATH

      - name: Install WP-CLI
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          sudo mv wp-cli.phar /usr/local/bin/wp

      - name: Install WordPress Core
        run: |
          cd $WP_PATH
          wp core install \
            --url="$WORDPRESS_URL" \
            --title="Test Site" \
            --admin_user="$ADMIN_USER" \
            --admin_password="$ADMIN_PASSWORD" \
            --admin_email="$ADMIN_EMAIL" \
            --skip-email

      - name: Setup Plugin
        run: |
          sudo mkdir -p $PLUGIN_PATH
          TEMP_DIR=$(mktemp -d)
          
          # Copy plugin files
          cp -r source/* $TEMP_DIR/
          sudo cp -r $TEMP_DIR/* $PLUGIN_PATH/
          
          # Set permissions
          sudo chown -R www-data:www-data $PLUGIN_PATH
          rm -rf $TEMP_DIR

      - name: Activate and Verify Plugin
        id: plugin-check
        run: |
          cd $WP_PATH
          wp plugin activate wpoven_pluginswitcher
          wp plugin verify-checksums wpoven_pluginswitcher
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Run Plugin Check
        uses: wordpress/plugin-check-action@v1
        with:
          exclude-checks: |
            i18n_usage
            late_escaping
          exclude-files: |
            .gitignore
            .gitmodules
          exclude-directories: |
            includes/libraries/redux-framework
            includes/libraries/plugin-update-checker
        env:
          PLUGIN_DIR: ${{ env.PLUGIN_PATH }}
          PLUGIN_SLUG: ${{ env.PLUGIN_SLUG }}
          WP_VERSION: ${{ github.event.inputs.wp_version || 'latest' }}

      - name: Verify Plugin Accessibility
        run: |
          # Wait for server to be ready
          sleep 5
          
          # Check main site
          MAIN_RESPONSE=$(curl -sL -w "%{http_code}" "$WORDPRESS_URL" -o /dev/null)
          if [ "$MAIN_RESPONSE" != "200" ]; then
            echo "❌ Main site is not accessible (HTTP $MAIN_RESPONSE)"
            exit 1
          fi
          
          # Check plugin admin page
          ADMIN_RESPONSE=$(curl -sL -w "%{http_code}" "$WORDPRESS_URL/wp-admin/admin.php?page=wpoven-plugin-switcher" -o /dev/null)
          if [ "$ADMIN_RESPONSE" != "200" ]; then
            echo "❌ Plugin admin page is not accessible (HTTP $ADMIN_RESPONSE)"
            exit 1
          fi
          
          echo "✅ All pages are accessible"

  create-release:
    name: Create Release
    needs: plugin-check
    if: needs.plugin-check.outputs.status == 'success'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set version variables
        id: versions
        run: |
          RELEASE_DATE=$(date +'%Y-%m-%d')
          PLUGIN_VERSION="${{ github.event.inputs.plugin_version || '1.0.0' }}"
          ZIP_NAME="${{ env.PLUGIN_SLUG }}-${RELEASE_DATE}.zip"
          
          echo "release_date=$RELEASE_DATE" >> $GITHUB_OUTPUT
          echo "plugin_version=$PLUGIN_VERSION" >> $GITHUB_OUTPUT
          echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT

      - name: Create plugin package
        run: |
          # Create releases directory
          mkdir -p releases
          
          # Create plugin zip
          (cd source && zip -r "../releases/${{ steps.versions.outputs.zip_name }}" . -x ".*" -x "__MACOSX" -x "*.git*")
          
          # Create copy for GitHub release
          cp "releases/${{ steps.versions.outputs.zip_name }}" "./plugin-release.zip"

      - name: Update README
        run: |
          sed -i "s/\*\*Tested up to:\*\* [0-9.]*/**Tested up to:** ${{ github.event.inputs.wp_version || '6.6.2' }}/" README.md
          sed -i "s/\*\*Stable tag:\*\* [0-9.]*/**Stable tag:** ${{ steps.versions.outputs.plugin_version }}/" README.md
          sed -i "s|/releases/download/[0-9.]*/wpoven-plugin-switcher-[0-9-]*.zip|/releases/download/${{ steps.versions.outputs.plugin_version }}/${{ steps.versions.outputs.zip_name }}|" README.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: plugin-release.zip
          tag_name: ${{ steps.versions.outputs.plugin_version }}
          name: "WPOven Plugin Switcher v${{ steps.versions.outputs.plugin_version }}"
          body: |
            🚀 WPOven Plugin Switcher Release v${{ steps.versions.outputs.plugin_version }}
            
            Release Date: ${{ steps.versions.outputs.release_date }}
            Tested with WordPress: ${{ github.event.inputs.wp_version || '6.6.2' }}
            
            ### Changes in this version:
            - [Add release notes here]
            
            ### Installation
            1. Download the plugin zip file
            2. Go to WordPress Admin > Plugins > Add New > Upload Plugin
            3. Upload the zip file and activate the plugin
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md releases/
          git commit -m "Release v${{ steps.versions.outputs.plugin_version }} - Update README and add release files" || echo "No changes to commit"
          git push